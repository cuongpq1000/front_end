{"ast":null,"code":"import { Router } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { NotificationService } from '../_services/notification.service';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../_services/auth.service\";\nimport * as i4 from \"../_services/user.service\";\nimport * as i5 from \"../_services/notification.service\";\nimport * as i6 from \"@angular/material/list\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/button\";\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor( // private patternValidator: PatternValidator,\n    formBuilder, router, authService, userService, notification) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.authService = authService;\n      this.userService = userService;\n      this.notification = notification;\n      this.loading = false;\n      this.submitted = false;\n      this.roles = []; // redirect to home if already logged in\n\n      if (this.authService.currentUserValue) {\n        this.router.navigate(['/']);\n      }\n    }\n\n    ngOnInit() {\n      this.registerForm = this.formBuilder.group({\n        role: [''],\n        firstName: ['', [Validators.required, Validators.pattern('^[a-zA-Z]+$')]],\n        lastName: ['', [Validators.required, Validators.pattern('^[a-zA-Z]+$')]],\n        email: ['', [Validators.required, Validators.email]],\n        username: ['', [Validators.required, Validators.pattern('^[a-zA-Z]+$')]],\n        password: ['', [Validators.required, Validators.minLength(6)]]\n      });\n      this.roles = [{\n        name: 'User'\n      }, {\n        name: 'Admin'\n      }];\n    } // convenience getter for easy access to form fields\n\n\n    get f() {\n      return this.registerForm.controls;\n    }\n\n    onSubmit() {\n      this.submitted = true; // stop here if form is invalid\n\n      if (this.registerForm.invalid) {\n        console.log('Error in onSubmit()');\n        return;\n      }\n\n      this.loading = true;\n      this.userService.register(this.registerForm.value).pipe(first()).subscribe(data => {\n        //  this.alertService.success('Registration successful', true);\n        this.router.navigate(['/login']);\n      }, error => {\n        console.log('Error:', error);\n        this.notification.showNotif(error);\n        this.loading = false;\n      });\n    }\n\n  }\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.UserService), i0.ɵɵdirectiveInject(i5.NotificationService));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 31,\n    vars: 1,\n    consts: [[1, \"wrapper\"], [\"role\", \"list\"], [1, \"example-form\"], [\"appearance\", \"legacy\", 1, \"example-full-width\"], [\"matInput\", \"\", \"placeholder\", \"Name\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"email\", \"placeholder\", \"Email\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Password\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Reenter password\"], [\"mat-raised-button\", \"\", \"routerLink\", \"/login\", 1, \"register-button\"], [\"src\", \"https://images.unsplash.com/photo-1554924620-ac9f6aef17bc?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=928&q=80\", 1, \"chess-image\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵelementStart(2, \"h1\");\n        i0.ɵɵtext(3, \"Create a new account\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-list\", 1);\n        i0.ɵɵelementStart(5, \"form\", 2);\n        i0.ɵɵelementStart(6, \"mat-list-item\");\n        i0.ɵɵelementStart(7, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-list-item\");\n        i0.ɵɵelementStart(12, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-list-item\");\n        i0.ɵɵelementStart(17, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(18, \"mat-label\");\n        i0.ɵɵtext(19, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"mat-list-item\");\n        i0.ɵɵelementStart(22, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(23, \"mat-label\");\n        i0.ɵɵtext(24, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"section\");\n        i0.ɵɵelementStart(27, \"button\", 9);\n        i0.ɵɵtext(28, \"Sign Up\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\");\n        i0.ɵɵelement(30, \"img\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n      }\n    },\n    directives: [i6.MatList, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i6.MatListItem, i7.MatFormField, i7.MatLabel, i8.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel, i9.MatButton, i2.RouterLink],\n    styles: [\"\"]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}