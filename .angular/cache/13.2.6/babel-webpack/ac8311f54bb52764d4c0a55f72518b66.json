{"ast":null,"code":"import { Router } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { NotificationService } from '../_services/notification.service';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../_services/auth.service\";\nimport * as i4 from \"../_services/user.service\";\nimport * as i5 from \"../_services/notification.service\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/button\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/material/progress-spinner\";\n\nfunction RegisterComponent_mat_hint_9_mat_hint_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_hint_9_mat_hint_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\");\n    i0.ɵɵtext(1, \"Username is using illegal characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_hint_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\");\n    i0.ɵɵtemplate(1, RegisterComponent_mat_hint_9_mat_hint_1_Template, 2, 0, \"mat-hint\", 4);\n    i0.ɵɵtemplate(2, RegisterComponent_mat_hint_9_mat_hint_2_Template, 2, 0, \"mat-hint\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.username.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.username.errors.pattern);\n  }\n}\n\nfunction RegisterComponent_mat_hint_13_mat_hint_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\");\n    i0.ɵɵtext(1, \"password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_hint_13_mat_hint_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_mat_hint_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\");\n    i0.ɵɵtemplate(1, RegisterComponent_mat_hint_13_mat_hint_1_Template, 2, 0, \"mat-hint\", 4);\n    i0.ɵɵtemplate(2, RegisterComponent_mat_hint_13_mat_hint_2_Template, 2, 0, \"mat-hint\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.password.errors.minlength);\n  }\n}\n\nfunction RegisterComponent_mat_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const role_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r8.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(role_r8.name);\n  }\n}\n\nfunction RegisterComponent_mat_spinner_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 12);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"diameter\", 30);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor( // private patternValidator: PatternValidator,\n    formBuilder, router, authService, userService, notification) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.authService = authService;\n      this.userService = userService;\n      this.notification = notification;\n      this.loading = false;\n      this.submitted = false;\n      this.roles = []; // redirect to home if already logged in\n\n      if (this.authService.currentUserValue) {\n        this.router.navigate(['/']);\n      }\n    }\n\n    ngOnInit() {\n      this.registerForm = this.formBuilder.group({\n        role: [''],\n        firstName: ['', [Validators.required, Validators.pattern('^[a-zA-Z]+$')]],\n        lastName: ['', [Validators.required, Validators.pattern('^[a-zA-Z]+$')]],\n        email: ['', [Validators.required, Validators.email]],\n        username: ['', [Validators.required, Validators.pattern('^[a-zA-Z]+$')]],\n        password: ['', [Validators.required, Validators.minLength(6)]]\n      });\n      this.roles = [{\n        name: 'User'\n      }, {\n        name: 'Admin'\n      }];\n    } // convenience getter for easy access to form fields\n\n\n    get f() {\n      return this.registerForm.controls;\n    }\n\n    onSubmit() {\n      this.submitted = true; // stop here if form is invalid\n\n      if (this.registerForm.invalid) {\n        console.log('Error in onSubmit()');\n        return;\n      }\n\n      this.loading = true;\n      this.userService.register(this.registerForm.value).pipe(first()).subscribe(data => {\n        //  this.alertService.success('Registration successful', true);\n        this.router.navigate(['/login']);\n      }, error => {\n        console.log('Error:', error);\n        this.notification.showNotif(error);\n        this.loading = false;\n      });\n    }\n\n  }\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.UserService), i0.ɵɵdirectiveInject(i5.NotificationService));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 24,\n    vars: 12,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"registration-card\"], [1, \"form-group\"], [\"matInput\", \"\", \"placeholder\", \"Username\", \"type\", \"text\", \"formControlName\", \"username\", 1, \"form-control\", 3, \"ngClass\"], [4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"Password\", \"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"placeholder\", \"Role\", \"formControlName\", \"role\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-button\", \"\", 3, \"disabled\"], [\"mat-button\", \"\", \"routerLink\", \"/login\"], [3, \"diameter\", 4, \"ngIf\"], [3, \"value\"], [3, \"diameter\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"mat-card\", 1);\n        i0.ɵɵelementStart(2, \"mat-card-header\");\n        i0.ɵɵelementStart(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \"Registration\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-card-content\");\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵelementStart(7, \"mat-form-field\");\n        i0.ɵɵelement(8, \"input\", 3);\n        i0.ɵɵtemplate(9, RegisterComponent_mat_hint_9_Template, 3, 2, \"mat-hint\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 2);\n        i0.ɵɵelementStart(11, \"mat-form-field\");\n        i0.ɵɵelement(12, \"input\", 5);\n        i0.ɵɵtemplate(13, RegisterComponent_mat_hint_13_Template, 3, 2, \"mat-hint\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 2);\n        i0.ɵɵelementStart(15, \"mat-form-field\");\n        i0.ɵɵelementStart(16, \"mat-select\", 6);\n        i0.ɵɵtemplate(17, RegisterComponent_mat_option_17_Template, 2, 2, \"mat-option\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-card-actions\");\n        i0.ɵɵelementStart(19, \"button\", 8);\n        i0.ɵɵtext(20, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 9);\n        i0.ɵɵtext(22, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, RegisterComponent_mat_spinner_23_Template, 1, 1, \"mat-spinner\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.submitted && ctx.f.username.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.username.errors);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx.submitted && ctx.f.password.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i6.MatCard, i6.MatCardHeader, i6.MatCardTitle, i6.MatCardContent, i7.MatFormField, i8.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i9.NgClass, i9.NgIf, i10.MatSelect, i9.NgForOf, i6.MatCardActions, i11.MatButton, i2.RouterLink, i7.MatHint, i12.MatOption, i13.MatSpinner],\n    styles: [\".container[_ngcontent-%COMP%]{width:70%;height:100%;justify-content:center;display:flex;align-items:center}.grid-container[_ngcontent-%COMP%]{display:grid;grid-template-columns:2fr 1fr;grid-gap:10px;gap:10px;background-color:#7c2828;padding:10px}.section[_ngcontent-%COMP%]{background-color:#7c2828}.mat-card[_ngcontent-%COMP%]{width:100%;height:100%}.register-title[_ngcontent-%COMP%]{color:#fff;font-weight:400;align-items:center;height:35px;margin-bottom:20px;margin-left:100px}.login-card[_ngcontent-%COMP%]{width:70%;height:70%}.card[_ngcontent-%COMP%]{background-color:#7c2828}.card-content[_ngcontent-%COMP%]{float:left}.example-form[_ngcontent-%COMP%]{min-width:150px;max-width:500px;width:100%}.example-full-width[_ngcontent-%COMP%]{width:100%}.chess-image[_ngcontent-%COMP%]{display:block;margin-left:auto;margin-right:0;width:100%;height:100vh}.register-button[_ngcontent-%COMP%]{align-items:center;width:20%;font-size:20px;height:35px;margin-bottom:20px;margin-left:100px}.home-button[_ngcontent-%COMP%]{align-items:center;width:20%;font-size:20px;height:35px;margin-bottom:20px;margin-left:auto;background-color:#000;color:#fff}.wrapper[_ngcontent-%COMP%]{display:grid;grid-template-columns:6fr 4fr;background-color:#7c2828}.wrapper[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{color:#fff;margin-left:100px;font-size:35px;margin-top:20px}.mat-toolbar[_ngcontent-%COMP%]{background-color:#000;color:#000}.chess-toolbar[_ngcontent-%COMP%]{flex:1 1 auto;background-color:#000;color:#000}.mat-list-item[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{color:#000!important}.mat-form-field[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{color:#000!important;background:transparent!important}.mat-input-element[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{color:#000!important}\"]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}